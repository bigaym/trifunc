# -*- coding: utf-8 -*-
"""
@function： GUI，张诚明进行了最主要设计，敖钰民进行了微调
@author1: 张诚明
@author2: 敖钰民
@last_time： 2022年3月26晚
"""
# Form implementation generated from reading ui file 'GUI.UI'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_HelloWorld(object):
    def __init__(self):
        self.fnc = "sin"
        self.md = "角度制"

    def setupUi(self, HelloWorld):
        HelloWorld.setObjectName("HelloWorld")
        HelloWorld.resize(709, 327)
        self.centralwidget = QtWidgets.QWidget(HelloWorld)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(150, 20, 511, 101))
        self.label.setObjectName("label")
        self.cal_Button = QtWidgets.QPushButton(self.centralwidget)
        self.cal_Button.setGeometry(QtCore.QRect(300, 220, 61, 28))
        self.cal_Button.setObjectName("cal_Button")
        self.input = QtWidgets.QLineEdit(self.centralwidget)
        self.input.setGeometry(QtCore.QRect(130, 210, 131, 41))
        self.input.setPlaceholderText("输入要计算的值")
        self.input.setObjectName("input")
        self.mode_select = QtWidgets.QComboBox(self.centralwidget)
        self.mode_select.setGeometry(QtCore.QRect(130, 170, 91, 22))
        self.mode_select.setObjectName("mode_select")
        self.mode_select.activated[str].connect(self.mode)  # 模式选择的回调函数
        self.mode_select.addItem("")
        self.mode_select.addItem("")
        self.output = QtWidgets.QLineEdit(self.centralwidget)
        self.output.setGeometry(QtCore.QRect(410, 210, 131, 41))
        self.output.setText("")
        self.output.setPlaceholderText("输出结果")
        self.output.setObjectName("output")
        self.func_select = QtWidgets.QComboBox(self.centralwidget)
        self.func_select.setGeometry(QtCore.QRect(130, 130, 91, 22))
        self.func_select.setObjectName("func_select")
        self.func_select.activated[str].connect(self.func)  # 函数选择的回调函数
        self.func_select.addItem("")
        self.func_select.addItem("")
        self.func_select.addItem("")
        self.func_select.addItem("")
        HelloWorld.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(HelloWorld)
        self.statusbar.setObjectName("statusbar")
        HelloWorld.setStatusBar(self.statusbar)
        self.actionSave = QtWidgets.QAction(HelloWorld)
        self.actionSave.setObjectName("actionSave")
        self.actionExit = QtWidgets.QAction(HelloWorld)
        self.actionExit.setObjectName("actionExit")
        self.actionType_Here = QtWidgets.QAction(HelloWorld)
        self.actionType_Here.setObjectName("actionType_Here")
        self.actionAdd_Separator = QtWidgets.QAction(HelloWorld)
        self.actionAdd_Separator.setObjectName("actionAdd_Separator")
        self.actionHello1 = QtWidgets.QAction(HelloWorld)
        self.actionHello1.setObjectName("actionHello1")
        self.actionHello2 = QtWidgets.QAction(HelloWorld)
        self.actionHello2.setObjectName("actionHello2")

        # 其他参数
        self.fnc = "sin"

        self.retranslateUi(HelloWorld)
        QtCore.QMetaObject.connectSlotsByName(HelloWorld)

    def retranslateUi(self, HelloWorld):
        _translate = QtCore.QCoreApplication.translate
        HelloWorld.setWindowTitle(_translate("HelloWorld", "三角函数计算器"))
        self.label.setToolTip(_translate("HelloWorld", "<html><head/><body><p><span style=\" font-size:48pt; font-weight:600;\">汇率转换器</span></p></body></html>"))
        self.label.setText(_translate("HelloWorld", "<html><head/><body><p><span style=\" font-size:28pt; font-weight:600;\">三角函数计算器</span></p></body></html>"))
        self.cal_Button.setText(_translate("HelloWorld", "计算"))
        self.mode_select.setItemText(0, _translate("HelloWorld", "角度制"))
        self.mode_select.setItemText(1, _translate("HelloWorld", "弧度制"))
        self.func_select.setItemText(0, _translate("HelloWorld", "sin"))
        self.func_select.setItemText(1, _translate("HelloWorld", "cos"))
        self.func_select.setItemText(2, _translate("HelloWorld", "arcsin"))
        self.func_select.setItemText(3, _translate("HelloWorld", "arctan"))
        self.actionSave.setText(_translate("HelloWorld", "Save"))
        self.actionExit.setText(_translate("HelloWorld", "Exit"))
        self.actionType_Here.setText(_translate("HelloWorld", "Type Here"))
        self.actionAdd_Separator.setText(_translate("HelloWorld", "Add Separator"))
        self.actionHello1.setText(_translate("HelloWorld", "Hello1"))
        self.actionHello2.setText(_translate("HelloWorld", "Hello2"))

    # 函数选择的回调函数
    def func(self):
        self.fnc = self.func_select.currentText()

    # 模式选择的回调函数
    def mode(self):
        self.md = self.mode_select.currentText()
